- name: Create bin directory
  file:
    path: /home/{{ lookup('env','USER') }}/bin
    state: directory
    owner: "{{ lookup('env','USER') }}"
    group: "{{ lookup('env','USER') }}"
    mode: '0700'

- name: Extract Binary Ninja
  unarchive:
    src: "{{ binaryninja_zip }}"
    dest: /home/{{ lookup('env','USER') }}/bin
  become_user: "{{ lookup('env','USER') }}"

- name: Copy Binary Ninja logo to use as launch icon
  copy:
    src: /home/{{ lookup('env','USER') }}/bin/binaryninja/docs/img/logo.png
    dest: /usr/share/icons/hicolor/256x256/apps/binaryninja.png
    owner: root
    group: root
    mode: '0644'

- name: Copy Binary Ninja desktop file
  template:
    src: templates/binaryninja.desktop.j2
    dest: /usr/share/applications/binaryninja.desktop
    owner: root
    group: root

- name: Clone radare2
  git:
    repo: https://github.com/radare/radare2.git
    dest: /home/{{ lookup('env','USER') }}/git/tools/radare2
    update: no
  become_user: "{{ lookup('env','USER') }}"

- name: Install radare2
  command: sys/user.sh
  args:
    chdir: /home/{{ lookup('env','USER') }}/git/tools/radare2
    creates: /home/{{ lookup('env','USER') }}/bin/radare2
  become_user: "{{ lookup('env','USER') }}"

- name: Clone Unicorn Engine
  git:
    repo: https://github.com/unicorn-engine/unicorn.git
    dest: /home/{{ lookup('env','USER') }}/git/tools/unicorn
    update: no
  become_user: "{{ lookup('env','USER') }}"

- name: Compile Unicorn Engine
  command: ./make.sh
  args:
    chdir: /home/{{ lookup('env','USER') }}/git/tools/unicorn
    creates: /usr/include/unicorn
  become_user: "{{ lookup('env','USER') }}"

- name: Install Unicorn Engine
  command: ./make.sh install
  args:
    chdir: /home/{{ lookup('env','USER') }}/git/tools/unicorn
    creates: /usr/include/unicorn

- name: Clone Capstone Engine
  git:
    repo: https://github.com/aquynh/capstone.git
    dest: /home/{{ lookup('env','USER') }}/git/tools/capstone
    update: no
  become_user: "{{ lookup('env','USER') }}"

- name: Compile Capstone Engine
  command: ./make.sh
  args:
    chdir: /home/{{ lookup('env','USER') }}/git/tools/capstone
    creates: /usr/include/capstone
  become_user: "{{ lookup('env','USER') }}"

- name: Install Capstone Engine
  command: ./make.sh install
  args:
    chdir: /home/{{ lookup('env','USER') }}/git/tools/capstone
    creates: /usr/include/capstone

- name: Install cmake
  apt:
    name: cmake

- name: Clone Keystone Engine
  git:
    repo: https://github.com/keystone-engine/keystone.git
    dest: /home/{{ lookup('env','USER') }}/git/tools/keystone
    update: no
  become_user: "{{ lookup('env','USER') }}"

- name: Create Keystone build directory
  file:
    path: /home/{{ lookup('env','USER') }}/git/tools/keystone/build
    state: directory
    owner: "{{ lookup('env','USER') }}"
    group: "{{ lookup('env','USER') }}"
    mode: '0755'

- name: Compile Keystone Engine
  command: ../make-share.sh
  args:
    chdir: /home/{{ lookup('env','USER') }}/git/tools/keystone/build
    creates: /usr/local/include/keystone
  become_user: "{{ lookup('env','USER') }}"

- name: Install Keystone Engine
  command: make install
  args:
    chdir: /home/{{ lookup('env','USER') }}/git/tools/keystone/build
    creates: /usr/local/include/keystone

- name: Install metasploit's repo key
  apt_key:
    data: "{{ lookup('file', 'files/metasploit.key') }}"
    state: present

- name: Setup metasploit's repo
  apt_repository:
    repo: deb [arch=amd64] http://downloads.metasploit.com/data/releases/metasploit-framework/apt sid main
    state: present

- name: Install metasploit
  apt:
    name: metasploit-framework
    state: present

- name: Install pwntools
  pip:
    name: pwntools
    state: present

- name: Install gdb
  apt:
    name: gdb

- name: Clone gef
  git:
    repo: https://github.com/hugsy/gef.git
    dest: /home/{{ lookup('env','USER') }}/git/tools/gef
    update: no
  become_user: "{{ lookup('env','USER') }}"

- name: Install python modules for gef
  pip:
    executable: pip3
    name: "{{ modules }}"
  vars:
    modules:
    - keystone-engine
    - unicorn
    - capstone
    - ropper

- name: Clone exploitable
  git:
    repo: https://github.com/jfoote/exploitable.git
    dest: /home/{{ lookup('env','USER') }}/git/tools/exploitable
    update: no
  become_user: "{{ lookup('env','USER') }}"

- name: Copy gdbinit
  copy:
    src: files/gdbinit
    dest: /home/{{ lookup('env','USER') }}/.gdbinit
  become_user: "{{ lookup('env','USER') }}"

- name: Clone voltron
  git:
    repo: https://github.com/snare/voltron.git
    dest: /home/{{ lookup('env','USER') }}/git/tools/voltron
    update: no
  become_user: "{{ lookup('env','USER') }}"

- name: Install voltron
  command: ./install.sh
  args:
    chdir: /home/{{ lookup('env','USER') }}/git/tools/voltron
    creates: /home/{{ lookup('env','USER') }}/.local/bin/voltron
  become_user: "{{ lookup('env','USER') }}"

- name: Install frida
  pip:
    name: frida-tools

- name: Clone checksec
  git:
    repo: https://github.com/slimm609/checksec.sh.git
    dest: /home/{{ lookup('env','USER') }}/git/tools/checksec
    update: no
  become_user: "{{ lookup('env','USER') }}"

- name: Link checksec
  file:
    src: /home/{{ lookup('env','USER') }}/git/tools/checksec/checksec
    dest: /home/{{ lookup('env','USER') }}/bin/checksec
    state: link
  become_user: "{{ lookup('env','USER') }}"

- name: Create ghidra directory
  file:
    path: /opt/ghidra
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Install ghidra
  unarchive:
    src: https://ghidra-sre.org/ghidra_9.0.4_PUBLIC_20190516.zip
    dest: /opt/ghidra
    remote_src: yes

- name: Create current link to ghidra
  file:
    src: /opt/ghidra/ghidra_9.0.4
    dest: /opt/ghidra/current
    state: link

- name: Copy ghidra desktop file
  copy:
    src: files/ghidra.desktop
    dest: /usr/share/applications/ghidra.desktop
    owner: root
    group: root
